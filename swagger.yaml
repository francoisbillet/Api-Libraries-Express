openapi: 3.0.3
info:
  title: Libraries, Books and Authors - OpenAPI 3.0
  description: |-
    This is a sample Library based on the OpenAPI 3.0 specification. You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).
  termsOfService: http://swagger.io/terms/
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://library.swagger.io/api/v1
tags:
  - name: library
    description: Everything about your Libraries
  - name: books
    description: Access to Libraries' Books
  - name: authors
    description: Operations about Books' Authors
paths:
  /library:
    post:
      tags:
        - library
      summary: Add a new library
      description: Add a new library
      operationId: addLibrary
      requestBody:
        description: Create a new library
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Library'
        '204':
          description: No content
  /library/{libraryId}:
    put:
      tags:
        - library
      summary: Update an existing library
      description: Update an existing library by Id
      operationId: updateLibrary
      parameters:
        - name: libraryId
          in: path
          description: ID of library to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent library in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Library'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
components:
  schemas:
    Library:
      required:
        - id
        - name
        - address
      type: object
      properties:
        id:
          type: number
          example: 01
        name:
          type: string
          example: Bibliothèque François-Mitterand
        address:
          type: string
          example: Quai François Mauriac, 75706 Paris
        number of available books:
          type: integer
          format: int32
          example: 643
        opening days and hours:
          type: string
          example: Monday 14:00-20:00, Tuesday 09:00-20:00, Wednesday 09:00-20:00, Thursday 09:00-20:00, Friday 09:00-20:00, Saturday 09:00-20:00, Sunday 13:00-19:00
          
